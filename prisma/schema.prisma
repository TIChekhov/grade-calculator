// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    // provider = "sqlite"
    // url      = env("DATABASE_URL")
    provider  = "postgresql"
    url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
    directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

enum ExamSubjectType {
    main
    additional
}

enum ExamSubjectsOnLearningProfilesType {
    mandatory
    elective
}

model ExamSubject {
    id               Int                              @id @default(autoincrement())
    title            String                           @default("")
    description      String?                          @default("")
    minScore         Int                              @default(20)
    type             ExamSubjectType?
    learningProfiles ExamSubjectsOnLearningProfiles[]
    createdAt        DateTime                         @default(now())
    updatedAt        DateTime                         @default(now())
}

model LearningDirection {
    id              Int               @id @default(autoincrement())
    title           String            @default("")
    description     String?           @default("")
    learningProfile LearningProfile[]
    createdAt       DateTime          @default(now())
    updatedAt       DateTime          @default(now())
}

model LearningProfile {
    id                  Int                              @id @default(autoincrement())
    title               String                           @default("")
    description         String?                          @default("")
    exams               ExamSubjectsOnLearningProfiles[]
    learningDirection   LearningDirection?               @relation(fields: [learningDirectionId], references: [id])
    learningDirectionId Int?
    createdAt           DateTime                         @default(now())
    updatedAt           DateTime                         @default(now())
}

model ExamSubjectsOnLearningProfiles {
    exam              ExamSubject                        @relation(fields: [examId], references: [id])
    examId            Int
    learningProfile   LearningProfile                    @relation(fields: [learningProfileId], references: [id])
    learningProfileId Int
    type              ExamSubjectsOnLearningProfilesType
    createdAt         DateTime                           @default(now())
    updatedAt         DateTime                           @default(now())

    @@id([examId, learningProfileId])
}
